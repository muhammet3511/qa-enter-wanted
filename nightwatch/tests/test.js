
const selectors = require('../test_data/css_selectors')
const data = require('../test_data/test_data')

module.exports = {
    beforeEach: browser => {
        browser.url('http://localhost:3000')
    },
    after: browser => {
        browser.end()
    },
    'testing valid minimum entries for all field': browser => {
        browser
            .clearValue(selectors.fields.hdr)
            .setValue(selectors.fields.hdr, data.goodData.input.hdr)
            .verify.value(selectors.fields.hdr, data.goodData.input.hdr)
            .clearValue(selectors.fields.mke)
            .setValue(selectors.fields.mke, data.goodData.input.mke)
            .verify.value(selectors.fields.mke, data.goodData.input.mke)
            .clearValue(selectors.fields.ori)
            .setValue(selectors.fields.ori, data.goodData.input.oai)
            .verify.value(selectors.fields.ori, data.goodData.input.oai)
            .clearValue(selectors.fields.nam)
            .setValue(selectors.fields.nam, data.goodData.input.nam)
            .verify.value(selectors.fields.nam, data.goodData.input.nam)
            .clearValue(selectors.fields.sex)
            .setValue(selectors.fields.sex, data.goodData.input.sex)
            .verify.value(selectors.fields.sex, data.goodData.input.sex)
            .clearValue(selectors.fields.rac)
            .setValue(selectors.fields.rac, data.goodData.input.rac)
            .verify.value(selectors.fields.rac, data.goodData.input.rac)
            .clearValue(selectors.fields.heig)
            .setValue(selectors.fields.heig, data.goodData.input.hgt)
            .verify.value(selectors.fields.heig, data.goodData.input.hgt)
            .clearValue(selectors.fields.wiig)
            .setValue(selectors.fields.wiig, data.goodData.input.wgt)
            .verify.value(selectors.fields.wiig, data.goodData.input.wgt)
            .clearValue(selectors.fields.hair)
            .setValue(selectors.fields.hair, data.goodData.input.hai)
            .verify.value(selectors.fields.hair, data.goodData.input.hai)
            .clearValue(selectors.fields.offns)
            .setValue(selectors.fields.offns, data.goodData.input.off)
            .verify.value(selectors.fields.offns, data.goodData.input.off)
            .clearValue(selectors.fields.dowv)
            .setValue(selectors.fields.dowv, data.goodData.input.dow)
            .verify.value(selectors.fields.dowv, data.goodData.input.dow)
            .clearValue(selectors.fields.dowt)
            .setValue(selectors.fields.dowt, data.goodData.input.dln)
            .verify.value(selectors.fields.dowt, data.goodData.input.dln)
            .clearValue(selectors.fields.dls)
            .setValue(selectors.fields.dls, data.goodData.input.dlet)
            .verify.value(selectors.fields.dls, data.goodData.input.dlet)
            .clearValue(selectors.fields.dlod)
            .setValue(selectors.fields.dlod, data.goodData.input.lsp)
            .verify.value(selectors.fields.dlod, data.goodData.input.lsp)
            .clearValue(selectors.fields.lsplate)
            .setValue(selectors.fields.lsplate, data.goodData.input.lc)
            .verify.value(selectors.fields.lsplate, data.goodData.input.lc)
            .clearValue(selectors.fields.lstate)
            .setValue(selectors.fields.lstate, data.goodData.input.ly)
            .verify.value(selectors.fields.lstate, data.goodData.input.ly)
            .clearValue(selectors.fields.lsyear)
            .setValue(selectors.fields.lsyear, data.goodData.input.dls)
            .verify.value(selectors.fields.lsyear, data.goodData.input.dls)
            .click(selectors.fields.submit)
        browser.expect.element(selectors.fields.textBlobText).text.to.equal(data.goodData.output.textBlobText)

    },

        'If I put in good data, but only one of a set of optional fields, I get an error' : browser => {
            browser
            //Set ALL the fields (even if I'm setting it to blank, this'll make sure they don't have any info in them)
                .clearValue(selectors.fields.hdr)
                .setValue(selectors.fields.hdr, data.badData.input.hdr)
                .verify.value(selectors.fields.hdr, data.badData.input.hdr)
                .clearValue(selectors.fields.mke)
                .setValue(selectors.fields.mke, data.badData.input.mke)
                .verify.value(selectors.fields.mke, data.badData.input.mke)
                .clearValue(selectors.fields.oai)
                .setValue(selectors.fields.oai, data.badData.input.oai)
                .verify.value(selectors.fields.oai, data.badData.input.oai)
                .clearValue(selectors.fields.nam)
                .setValue(selectors.fields.nam, data.badData.input.nam)
                .verify.value(selectors.fields.nam, data.badData.input.nam)
                .clearValue(selectors.fields.sex)
                .setValue(selectors.fields.sex, data.badData.input.sex)
                .verify.value(selectors.fields.sex, data.badData.input.sex)
                .clearValue(selectors.fields.rac)
                .setValue(selectors.fields.rac, data.badData.input.rac)
                .verify.value(selectors.fields.rac, data.badData.input.rac)
                .clearValue(selectors.fields.hgt)
                .setValue(selectors.fields.hgt, data.badData.input.hgt)
                .verify.value(selectors.fields.hgt, data.badData.input.hgt)
                .clearValue(selectors.fields.wgt)
                .setValue(selectors.fields.wgt, data.badData.input.wgt)
                .verify.value(selectors.fields.wgt, data.badData.input.wgt)
                .clearValue(selectors.fields.hai)
                .setValue(selectors.fields.hai, data.badData.input.hai)
                .verify.value(selectors.fields.hai, data.badData.input.hai)
                .clearValue(selectors.fields.off)
                .setValue(selectors.fields.off, data.badData.input.off)
                .verify.value(selectors.fields.off, data.badData.input.off)
                .clearValue(selectors.fields.dow)
                .setValue(selectors.fields.dow, data.badData.input.dow)
                .verify.value(selectors.fields.dow, data.badData.input.dow)
                .clearValue(selectors.fields.oln)
                .setValue(selectors.fields.oln, data.badData.input.oln)
                .verify.value(selectors.fields.oln, data.badData.input.oln)
                .clearValue(selectors.fields.ols)
                .setValue(selectors.fields.ols, data.badData.input.ols)
                .verify.value(selectors.fields.ols, data.badData.input.ols)
                .clearValue(selectors.fields.oly)
                .setValue(selectors.fields.oly, data.badData.input.oly)
                .verify.value(selectors.fields.oly, data.badData.input.oly)
                .clearValue(selectors.fields.lic)
                .setValue(selectors.fields.lic, data.badData.input.lic)
                .verify.value(selectors.fields.lic, data.badData.input.lic)
                .clearValue(selectors.fields.lis)
                .setValue(selectors.fields.lis, data.badData.input.lis)
                .verify.value(selectors.fields.lis, data.badData.input.lis)
                .clearValue(selectors.fields.liy)
                .setValue(selectors.fields.liy, data.badData.input.liy)
                .verify.value(selectors.fields.liy, data.badData.input.liy)
            //I've set all the fields, time to submit
                .click(selectors.fields.submit)
                .pause(100)
            //now I'll check that all the expected results are correct
            browser.expect.element(selectors.messages.header).text.to.equal(data.badData.output.header)
            //this transaction only has one error message to check, so I don't need to repeat the check
            browser.expect.element(selectors.messages.errorList).text.to.contain(data.badData.output.errorList.oln)
            browser.expect.element(selectors.messages.queryTitle).text.to.equal(data.badData.output.queryTitle)
            browser.expect.element(selectors.messages.assembledQuery).text.to.equal(data.badData.output.assembledQuery)
        }
}